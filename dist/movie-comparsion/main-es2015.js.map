{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/add-movie/add-movie.component.ts","./src/app/admin/add-movie/add-movie.component.html","./src/app/admin/admin-console/admin-console.component.ts","./src/app/admin/admin-console/admin-console.component.html","./src/app/admin/admin.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/authentic/authentic.module.ts","./src/app/authentic/login/login.component.ts","./src/app/authentic/login/login.component.html","./src/app/core/services/navigator.service.ts","./src/app/data-store/actions/data.actions.ts","./src/app/data-store/actions/index.ts","./src/app/data-store/actions/movie.actions.ts","./src/app/data-store/data-store.module.ts","./src/app/data-store/effects/movie.effects.ts","./src/app/data-store/reducers/index.ts","./src/app/data-store/reducers/movie.reducer.ts","./src/app/data-store/services/data-error.service.ts","./src/app/data-store/services/i-movie-data.service.ts","./src/app/data-store/services/index.ts","./src/app/data-store/services/movie.selectors.ts","./src/app/model/movie.ts","./src/app/public/movies-list/movies-list.component.ts","./src/app/public/movies-list/movies-list.component.html","./src/app/public/public.module.ts","./src/app/shared/material.module.ts","./src/app/shared/shared.module.ts","./src/app/shared/toolbar/toolbar.component.ts","./src/app/shared/toolbar/toolbar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {IMovie} from \"../../model/movie\";\nimport {Store} from \"@ngrx/store\";\nimport {EntityState} from \"../../data-store/reducers\";\nimport {IMovieSelectors} from \"../../data-store/services\";\nimport * as IMovieActions from \"../../data-store/actions\"\n\n@Component({\n  selector: 'hija-add-movie',\n  templateUrl: './add-movie.component.html',\n  styles: [\n  ]\n})\nexport class AddMovieComponent implements OnInit {\n  movieForm = this.formBuilder.group({\n    name:['', Validators.required],\n    imdbUrl:['', Validators.required],\n    rating: ['', Validators.required]\n  });\n\n  constructor(private formBuilder: FormBuilder,\n              private store: Store<EntityState>,\n              private movieSelectors: IMovieSelectors) { }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    if (this.movieForm.valid) {\n      const movie = IMovie.create({...this.movieForm.value});\n      this.add(movie)\n      this.movieForm.reset()\n    }\n  }\n  add(movie: IMovie) {\n    this.store.dispatch(new IMovieActions.AddMovie(movie));\n    // this.store.dispatch(new IMovieActions.AddCustomer(customer));\n  }\n}\n","<div class=\"container\">\n    <form [formGroup]=\"movieForm\" (ngSubmit)=\"submit()\">\n        <div>\n            <mat-form-field class=\"margin-right-10\">\n                <mat-label>Movie name</mat-label>\n                <input matInput placeholder=\"The GodFather\" formControlName=\"name\" required>\n            </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field class=\"custom-width-form-field\">\n                <mat-label>IMDb url</mat-label>\n                <input matInput placeholder=\"url from imdb\" formControlName=\"imdbUrl\" required>\n            </mat-form-field>\n        </div>\n        <div>\n            <mat-slider thumbLabel min=\"0\" max=\"10\" step=\"1\" formControlName=\"rating\"></mat-slider>\n        </div>\n        <div class=\"justify-content-around\">\n            <button mat-button\n                    mat-raised-button\n                    color=\"primary\"\n                    type=\"submit\"\n                    [disabled]=\"!movieForm.valid\"\n                    [textContent]=\"'Submit'\"></button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'hija-admin-console',\n  templateUrl: './admin-console.component.html',\n  styles: [\n  ]\n})\nexport class AdminConsoleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group mat-align-tabs=\"start\">\n    <mat-tab label=\"Add Movie\">\n        <hija-add-movie></hija-add-movie>\n    </mat-tab>\n</mat-tab-group>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes} from \"@angular/router\";\nimport { AdminConsoleComponent } from './admin-console/admin-console.component';\nimport {SharedModule} from \"../shared/shared.module\";\nimport { AddMovieComponent } from './add-movie/add-movie.component';\n\nconst routes: Routes = [\n  {path: 'admin',component: AdminConsoleComponent}\n]\n\n@NgModule({\n  declarations: [AdminConsoleComponent, AddMovieComponent],\n  imports: [\n      RouterModule.forChild(routes),\n      CommonModule,\n      SharedModule\n  ]\n})\nexport class AdminModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  { path:'', pathMatch:'full', redirectTo:'/public'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'hija-root',\n  template: `\n    <!--The content below is only a placeholder and can be replaced.-->\n    <hija-toolbar></hija-toolbar>\n     <div class=\"container\" style=\"margin: 5px 0px\">\n      <router-outlet></router-outlet>\n    </div>\n  `,\n  styles: []\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {PublicModule} from \"./public/public.module\";\nimport {SharedModule} from \"./shared/shared.module\";\nimport {AuthenticModule} from \"./authentic/authentic.module\";\nimport {AdminModule} from \"./admin/admin.module\";\nimport {DataStoreModule} from \"./data-store/data-store.module\";\nimport {MetaReducer, StoreModule} from \"@ngrx/store\";\nimport {EffectsModule} from \"@ngrx/effects\";\nimport {environment} from \"../environments/environment\";\nimport {StoreDevtoolsModule} from \"@ngrx/store-devtools\";\n\nexport const metaReducers: MetaReducer<any>[] = environment.production ? [] : [];\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    PublicModule,\n    SharedModule,\n    AuthenticModule,\n    AdminModule,\n    DataStoreModule,\n    StoreModule.forRoot({}, { metaReducers }),\n    EffectsModule.forRoot([]),\n    !environment.production ? StoreDevtoolsModule.instrument() : []\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport { LoginComponent } from './login/login.component';\nimport {SharedModule} from \"../shared/shared.module\";\n\nconst routes: Routes = [\n    { path: 'login', component: LoginComponent }\n]\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    SharedModule,\n    CommonModule,\n\n  ],\n  exports: [RouterModule]\n})\nexport class AuthenticModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {IUser} from \"../../model/user\";\nimport {NavigatorService} from \"../../core/services/navigator.service\";\n\n@Component({\n  selector: 'hija-login',\n  templateUrl: './login.component.html',\n  styleUrls: [\n      './login.component.css'\n  ]\n})\nexport class LoginComponent implements OnInit {\n  loginForm = this.formBuilder.group({\n    firstName:[''],\n    lastName:[''],\n    email: ['', Validators.required],\n    password: ['', Validators.required]\n  });\n  constructor(\n      private formBuilder: FormBuilder,\n      private router$: NavigatorService) { }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    const user = { ...this.loginForm.value } as IUser;\n    console.log(user);\n    if (this.loginForm.valid) {\n      // const user = { ...this.loginForm.value } as IUser;\n        this.add(user);\n    }\n  }\n  add(user: IUser) {\n    // this.customersService.add(customer);\n    this.router$.goToAdmin();\n  }\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-md-center\">\n        <div class=\"col-md-auto\">\n            <mat-card>\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n                    <div>\n                        <mat-form-field class=\"margin-right-10\">\n                            <mat-label>First name</mat-label>\n                            <input matInput placeholder=\"Adam\" formControlName=\"firstName\" required>\n                        </mat-form-field>\n                        <mat-form-field>\n                            <mat-label>Last name</mat-label>\n                            <input matInput placeholder=\"Smith\" formControlName=\"lastName\">\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"custom-width-form-field\">\n                            <mat-label>E-mail</mat-label>\n                            <input matInput placeholder=\"movies@example.com\" formControlName=\"email\" required>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"custom-width-form-field\">\n                            <mat-label>Password</mat-label>\n                            <input matInput\n                                   placeholder=\"password\"\n                                   formControlName=\"password\"\n                                   [type]=\"'password'\"\n                                   required>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"row justify-content-around\">\n                    <button mat-button\n                            mat-raised-button\n                            color=\"primary\"\n                            type=\"submit\"\n                            [disabled]=\"!loginForm.valid\"\n                            [textContent]=\"'Sign in/up'\"></button>\n                    </div>\n                    </form>\n            </mat-card>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {Subject} from \"rxjs\";\nimport {Router} from \"@angular/router\";\nimport {error} from \"@angular/compiler/src/util\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigatorService {\n\n  constructor(private router: Router) { }\n\n  goToAdmin(){\n    this.router.navigate(['/admin'])\n        .then(r => console.log('Moved to Admin console!'))\n        .catch(error => console.warn(error))\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError, mergeMap } from 'rxjs/operators';\nimport { DataServiceError } from '../services';\n\nexport abstract class DataAction<T> implements Action {\n    readonly type: string;\n    constructor(public readonly payload: T) {}\n}\n\nexport abstract class DataErrorAction<T> implements Action {\n    readonly type: string;\n    constructor(public readonly payload: DataServiceError<T>) {}\n}\n\n// Function of additional success actions\n// that returns a function that returns\n// an observable of ngrx action(s) from DataService method observable\nexport const toAction = (...actions: Action[]) => <T>(\n    source: Observable<T>,\n    successAction: new (data: T) => Action,\n    errorAction: new (err: DataServiceError<T>) => Action\n) =>\n    source.pipe(\n        mergeMap((data: T) => [new successAction(data), ...actions]),\n        catchError((err: DataServiceError<T>) => of(new errorAction(err)))\n    );\n","export * from './data.actions';\nexport * from './movie.actions';\n","import { Action } from '@ngrx/store';\n\nimport { IMovie } from '../../model/movie';\nimport { DataAction, DataErrorAction } from './data.actions';\nimport {DataServiceError} from \"../services\";\n\nexport const ADD_MOVIE = '[Movie] ADD_MOVIE';\nexport const ADD_MOVIE_ERROR = '[Movie] ADD_MOVIE_ERROR';\nexport const ADD_MOVIE_SUCCESS = '[Movie] ADD_MOVIE_SUCCESS';\n\nexport const GET_MOVIES = '[Movie] GET_MOVIES';\nexport const GET_MOVIES_SUCCESS = '[Movie] GET_MOVIES_SUCCESS';\nexport const GET_MOVIES_ERROR = '[Movie] GET_MOVIES_ERROR';\n\nexport const GET_MOVIE = '[Movie] GET_MOVIE';\nexport const GET_MOVIE_SUCCESS = '[Movie] GET_MOVIE_SUCCESS';\nexport const GET_MOVIE_ERROR = '[Movie] GET_MOVIE_ERROR';\n\nexport const SET_MOVIE_LOADING = '[Movie] SET_MOVIE_LOADING';\n\n// Initialize Movie Actions\n\nexport abstract class MovieAction implements DataAction<IMovie> {\n    readonly type: string;\n    constructor(public readonly payload: IMovie) {}\n}\n\nexport abstract class MovieErrorAction implements DataErrorAction<IMovie> {\n    readonly type: string;\n    constructor(public readonly payload: DataServiceError<IMovie>) {}\n}\n\nexport class GetMovies implements Action {\n    readonly type =  GET_MOVIES;\n}\n\nexport class GetMoviesSuccess implements Action {\n    readonly type = GET_MOVIES_SUCCESS;\n    constructor(public readonly payload: IMovie[]) {\n    }\n}\nexport class GetMoviesError implements Action {\n    readonly type = GET_MOVIES_ERROR;\n    constructor(public readonly payload: any) {\n    }\n}\n\nexport class AddMovie extends MovieAction {\n    readonly type = ADD_MOVIE;\n}\nexport class AddMovieSuccess extends MovieAction {\n    readonly type = ADD_MOVIE_SUCCESS\n}\nexport class AddMovieError extends MovieErrorAction {\n    readonly type = ADD_MOVIE_ERROR;\n}\n\nexport class SetMovieLoading {\n    readonly type = SET_MOVIE_LOADING;\n    constructor(public payload = true) {\n    }\n}\nexport type AllMovieActions =\n    | GetMovies\n    | GetMoviesError\n    | GetMoviesSuccess\n    | AddMovie\n    | AddMovieError\n    | AddMovieSuccess\n    | SetMovieLoading ;\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {StoreModule} from \"@ngrx/store\";\nimport {EffectsModule} from \"@ngrx/effects\";\nimport {reducers} from \"./reducers\";\nimport {IMovieEffects} from \"./effects/movie.effects\";\nimport {IMovieDataService, IMovieSelectors} from \"./services\";\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n      CommonModule,\n      HttpClientModule,\n      StoreModule.forFeature('entityCache', reducers),\n      EffectsModule.forFeature([ IMovieEffects ])\n  ],\n  providers: [\n    IMovieDataService,\n    IMovieSelectors\n  ],\n  exports: [\n      StoreModule, EffectsModule\n  ]\n})\nexport class DataStoreModule { }\n","\nimport * as IMovieActions from '../actions';\nimport {Injectable} from \"@angular/core\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable} from \"rxjs\";\nimport {IMovie} from \"../../model/movie\";\nimport {IMovieDataService} from \"../services/i-movie-data.service\";\nimport {concatMap, switchMap} from \"rxjs/operators\";\nimport {Action} from \"@ngrx/store\";\n\nconst toAction = IMovieActions.toAction()\ntype MovieAction = IMovieActions.MovieAction;\ntype GetMoviesAction = IMovieActions.GetMovies;\n\n@Injectable()\nexport class IMovieEffects {\n    constructor(\n        private actions$: Actions,\n        private movieDataService: IMovieDataService\n    ) {}\n\n    @Effect()\n    getMovies$: Observable<Action> = this.actions$\n        .pipe(\n            ofType(IMovieActions.GET_MOVIES),\n            switchMap(() =>\n            toAction(\n                this.movieDataService.getMovies(),\n                IMovieActions.GetMoviesSuccess,\n                IMovieActions.GetMoviesError\n            ))\n        )\n\n    @Effect()\n    addMovie$: Observable<Action> = this.actions$\n        .pipe(\n            ofType(IMovieActions.ADD_MOVIE),\n            concatMap((action: MovieAction) =>\n            toAction(\n                this.movieDataService.addMovie(action.payload),\n                IMovieActions.AddMovieSuccess,\n                IMovieActions.AddMovieError\n            ))\n        )\n}\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport * as actions from '../actions';\nimport * as movieReducers from './movie.reducer';\n\n\nexport type Action = actions.MovieAction;\n\nexport interface EntityState {\n    movies: movieReducers.IMovieState;\n}\n\nexport const reducers: ActionReducerMap<EntityState> = {\n    movies: movieReducers.reducer\n};\n","import {IMovie} from \"../../model/movie\";\nimport * as IMovieActions from '../actions';\n\nexport interface IMovieState {\n    movies: IMovie[];\n    movie: IMovie;\n    loading: boolean;\n    error: boolean;\n}\nexport const initialState: IMovieState = {\n    movies: [],\n    movie: null,\n    loading: false,\n    error: false\n};\n\nexport function reducer (\n    state =  initialState,\n    action: IMovieActions.AllMovieActions\n): IMovieState {\n    switch (action.type) {\n\n        case IMovieActions.ADD_MOVIE: {\n            return { ... state, loading: true};\n        }\n        case IMovieActions.ADD_MOVIE_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                movies: [...state.movies, { ...action.payload }]\n            }\n        }\n        case IMovieActions.ADD_MOVIE_ERROR: {\n            return {\n                ...state,\n                loading: false\n            }\n        }\n        case IMovieActions.GET_MOVIES: {\n            return {\n                ...state,\n                loading: true\n            }\n        }\n        case IMovieActions.GET_MOVIES_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                movies: action.payload\n            }\n        }\n        default:\n            break;\n    }\n}\n","export class DataServiceError<T> {\n    constructor(public error: any, public requestData: T) {}\n}\n","import {Injectable} from \"@angular/core\";\nimport {environment} from \"../../../environments/environment\";\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from \"@angular/common/http\";\nimport {Observable, throwError} from \"rxjs\";\nimport {IMovie} from \"../../model/movie\";\nimport {catchError} from \"rxjs/operators\";\nimport {DataServiceError} from \"./data-error.service\";\n\n\n@Injectable()\nexport class IMovieDataService {\n    apiUrlBase = environment.apiUrlBase;\n    constructor(private http: HttpClient) {\n    }\n\n    getMovies(): Observable<IMovie[]> {\n        return this.http.get<IMovie[]>(`${this.apiUrlBase}/movie`)\n            .pipe(\n                catchError(this.handleError())\n            )\n    }\n\n    addMovie(movie: IMovie): Observable<IMovie> {\n        return this.http.post<IMovie>(`${this.apiUrlBase}/movie`, movie)\n            .pipe(\n                catchError(this.handleError(movie))\n            )\n    }\n\n\n    private handleError<T>(requestData?: T) {\n        return (res: HttpErrorResponse) => {\n            const error = new DataServiceError(res.error, requestData);\n            console.error(error);\n            // return new ErrorObservable(error);\n            return throwError(error);\n        };\n    }\n}\n","export { DataServiceError } from './data-error.service';\n\nexport * from './i-movie-data.service'\n\nexport * from './movie.selectors'\n","\n\nimport {EntityState} from \"../reducers\";\nimport {createFeatureSelector, createSelector, select, Store} from \"@ngrx/store\";\nimport {IMovieState} from \"../reducers/movie.reducer\";\nimport {Injectable} from \"@angular/core\";\n\n\nconst getEntityState = createFeatureSelector<EntityState>('entityCache');\n\n\nconst getMovieState = createSelector(\n    getEntityState,\n    (state: EntityState) => state.movies\n);\n\nconst getAllMovies = createSelector(\n    getMovieState,\n    (state: IMovieState) => state.movies\n)\n\nconst getMovieLoading = createSelector(\n    getMovieState,\n    (state: IMovieState) => state.loading\n)\n\n@Injectable()\nexport class IMovieSelectors {\n    constructor(private store: Store<EntityState>) {}\n\n    movies$ = this.store.pipe(select(getAllMovies))\n    movieState$ = this.store.pipe(select(getMovieState))\n    loading$ = this.store.pipe(select(getMovieLoading))\n}\n","\nexport class IMovie {\n    _id: string;\n    name: string;\n    rating: number;\n    likes: number;\n    imdbUrl: string;\n    timestamp: string;\n    poster?: string;\n\n    static create(movie: Partial<IMovie> = {}) {\n        const newMovie = Object.assign(new IMovie(), {\n            _id: null,\n            name: null,\n            rating: 0,\n            likes: 0,\n            imdbUrl: null,\n            timestamp: null,\n            poster: null,\n            ...movie\n        });\n        return newMovie;\n    }\n};\n\n\n\n// export class IMovie {\n//     static missingMovie = 'assets/missing-movie.png';\n//\n//     id: string;\n//     name: string;\n//     rating: number;\n//     likes: number;\n//     imdbUrl: string;\n//     poster?: string;\n//\n//     static create(movie: Partial<IMovie> = {}) {\n//         const newMovie = Object.assign(new IMovie(), {\n//             name: 'not-detect',\n//             rating: 0,\n//             likes: 0,\n//             poster: IMovie.missingMovie,\n//             id: null\n//         });\n//         return newMovie;\n//     }\n\n//\n// let movie = IMovie.create(1, {})\n// console.log(movie)\n","import { Component, OnInit } from '@angular/core';\nimport {from, Observable, of} from \"rxjs\";\nimport {IMovie} from \"../../model/movie\";\nimport {Store} from \"@ngrx/store\";\nimport {EntityState} from \"../../data-store/reducers\";\nimport {IMovieSelectors} from \"../../data-store/services\";\nimport * as IMovieActions from \"../../data-store/actions\"\n\n@Component({\n  selector: 'hija-movies-list',\n  templateUrl: './movies-list.component.html',\n  styles: [\n  ]\n})\nexport class MoviesListComponent implements OnInit {\n  movies$: Observable<IMovie[]>;\n  loading$: Observable<boolean>;\n\n  constructor(\n      private store: Store<EntityState>,\n      private movieSelectors: IMovieSelectors\n  ) {\n    this.movies$ = this.movieSelectors.movies$;\n    this.loading$ = this.movieSelectors.loading$;\n  }\n\n  ngOnInit(): void {\n    this.store.dispatch(new IMovieActions.GetMovies());\n  }\n\n  openImdbTab(imdbUrl: string) {\n    window.open(imdbUrl);\n  }\n}\n","<mat-progress-bar *ngIf=\"loading$ | async\" mode=\"buffer\"></mat-progress-bar>\n\n<div  *ngFor=\"let movie of movies$ | async\">\n\n    <mat-card>\n        <!--    <div class=\"container\">-->\n        <div class=\"row\">\n            <div class=\"col text-center\">\n                <span [textContent]=\"movie.name\"></span>\n            </div>\n            <div class=\"col text-center\">\n                <span [textContent]=\"'Our Rating:' + movie.rating\"> </span>\n            </div>\n            <div class=\"col text-center\">\n                <span [outerText]=\"movie.likes + '\\npeople like\\n' + movie.name\"></span>\n                <br>\n                <mat-icon aria-hidden=\"false\" aria-label=\"Example thumb_up icon\">thumb_up</mat-icon>\n            </div>\n            <div class=\"col\">\n                <button mat-button mat-raised-button (click)=\"openImdbTab(movie.imdbUrl)\">Visit IMDB Page</button>\n            </div>\n        </div>\n        <!--    </div>-->\n    </mat-card>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport { MoviesListComponent } from './movies-list/movies-list.component';\nimport {MaterialModule} from \"../shared/material.module\";\n\nconst routes: Routes = [\n  { path: 'public',  component: MoviesListComponent }\n];\n\n@NgModule({\n  declarations: [MoviesListComponent],\n  imports: [\n    RouterModule.forRoot(routes),\n    MaterialModule.components,\n    CommonModule\n  ],\n  exports: [RouterModule]\n})\nexport class PublicModule { }\n","import {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatIconModule} from '@angular/material/icon';\n\nexport class MaterialModule {\n    static components = [\n        ReactiveFormsModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatButtonModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatTabsModule,\n        MatSliderModule,\n        MatProgressBarModule,\n        MatIconModule\n    ]\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport {MaterialModule} from \"./material.module\";\nimport {RouterModule} from \"@angular/router\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\n\n\n\n\n@NgModule({\n  declarations: [ToolbarComponent],\n  exports: [\n      BrowserAnimationsModule,\n      ToolbarComponent,\n      MaterialModule.components,\n  ],\n    imports: [\n        BrowserAnimationsModule,\n        CommonModule,\n        MaterialModule.components,\n        RouterModule,\n    ],\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {NavigatorService} from \"../../core/services/navigator.service\";\n\n@Component({\n  selector: 'hija-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: [\n      './toolbar.component.css'\n  ]\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor(private navigator: NavigatorService) { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<mat-toolbar>\n    <mat-toolbar-row class=\"justify-content-between\">\n        <div>\n            <button mat-raised-button [routerLink]=\"['public']\">Public</button>\n        </div>\n        <div>\n        <button mat-raised-button color=\"primary\" [routerLink]=\"['login']\">Login</button>\n        </div>\n    </mat-toolbar-row>\n</mat-toolbar>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrlBase: 'http://0.0.0.0:5000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}