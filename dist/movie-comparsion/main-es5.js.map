{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/add-movie/add-movie.component.ts","webpack:///src/app/admin/add-movie/add-movie.component.html","webpack:///src/app/admin/admin-console/admin-console.component.ts","webpack:///src/app/admin/admin-console/admin-console.component.html","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/authentic/authentic.module.ts","webpack:///src/app/authentic/login/login.component.ts","webpack:///src/app/authentic/login/login.component.html","webpack:///src/app/core/services/navigator.service.ts","webpack:///src/app/data-store/actions/data.actions.ts","webpack:///src/app/data-store/actions/index.ts","webpack:///src/app/data-store/actions/movie.actions.ts","webpack:///src/app/data-store/data-store.module.ts","webpack:///src/app/data-store/effects/movie.effects.ts","webpack:///src/app/data-store/reducers/index.ts","webpack:///src/app/data-store/reducers/movie.reducer.ts","webpack:///src/app/data-store/services/data-error.service.ts","webpack:///src/app/data-store/services/i-movie-data.service.ts","webpack:///src/app/data-store/services/index.ts","webpack:///src/app/data-store/services/movie.selectors.ts","webpack:///src/app/model/movie.ts","webpack:///src/app/public/movies-list/movies-list.component.ts","webpack:///src/app/public/movies-list/movies-list.component.html","webpack:///src/app/public/public.module.ts","webpack:///src/app/shared/material.module.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/toolbar/toolbar.component.ts","webpack:///src/app/shared/toolbar/toolbar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddMovieComponent","formBuilder","store","movieSelectors","movieForm","group","name","required","imdbUrl","rating","valid","movie","create","value","add","reset","dispatch","submit","selector","templateUrl","styles","AdminConsoleComponent","routes","path","component","AdminModule","forChild","declarations","imports","pathMatch","redirectTo","AppRoutingModule","forRoot","AppComponent","template","metaReducers","production","AppModule","instrument","providers","bootstrap","AuthenticModule","LoginComponent","router$","loginForm","firstName","lastName","email","password","user","console","log","goToAdmin","styleUrls","NavigatorService","router","navigate","r","error","warn","providedIn","DataAction","payload","DataErrorAction","toAction","actions","source","successAction","errorAction","pipe","data","err","ADD_MOVIE","ADD_MOVIE_ERROR","ADD_MOVIE_SUCCESS","GET_MOVIES","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","GET_MOVIE","GET_MOVIE_SUCCESS","GET_MOVIE_ERROR","SET_MOVIE_LOADING","MovieAction","MovieErrorAction","GetMovies","type","GetMoviesSuccess","GetMoviesError","AddMovie","AddMovieSuccess","AddMovieError","SetMovieLoading","DataStoreModule","forFeature","IMovieEffects","actions$","movieDataService","getMovies$","getMovies","addMovie$","action","addMovie","reducers","movies","initialState","loading","reducer","state","DataServiceError","requestData","IMovieDataService","http","apiUrlBase","get","handleError","post","res","getEntityState","getMovieState","getAllMovies","getMovieLoading","IMovieSelectors","movies$","movieState$","loading$","IMovie","newMovie","Object","assign","_id","likes","timestamp","poster","MoviesListComponent","window","open","PublicModule","components","MaterialModule","SharedModule","ToolbarComponent","navigator","environment","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {IMovie} from \"../../model/movie\";\nimport {Store} from \"@ngrx/store\";\nimport {EntityState} from \"../../data-store/reducers\";\nimport {IMovieSelectors} from \"../../data-store/services\";\nimport * as IMovieActions from \"../../data-store/actions\"\n\n@Component({\n  selector: 'hija-add-movie',\n  templateUrl: './add-movie.component.html',\n  styles: [\n  ]\n})\nexport class AddMovieComponent implements OnInit {\n  movieForm = this.formBuilder.group({\n    name:['', Validators.required],\n    imdbUrl:['', Validators.required],\n    rating: ['', Validators.required]\n  });\n\n  constructor(private formBuilder: FormBuilder,\n              private store: Store<EntityState>,\n              private movieSelectors: IMovieSelectors) { }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    if (this.movieForm.valid) {\n      const movie = IMovie.create({...this.movieForm.value});\n      this.add(movie)\n      this.movieForm.reset()\n    }\n  }\n  add(movie: IMovie) {\n    this.store.dispatch(new IMovieActions.AddMovie(movie));\n    // this.store.dispatch(new IMovieActions.AddCustomer(customer));\n  }\n}\n","<div class=\"container\">\n    <form [formGroup]=\"movieForm\" (ngSubmit)=\"submit()\">\n        <div>\n            <mat-form-field class=\"margin-right-10\">\n                <mat-label>Movie name</mat-label>\n                <input matInput placeholder=\"The GodFather\" formControlName=\"name\" required>\n            </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field class=\"custom-width-form-field\">\n                <mat-label>IMDb url</mat-label>\n                <input matInput placeholder=\"url from imdb\" formControlName=\"imdbUrl\" required>\n            </mat-form-field>\n        </div>\n        <div>\n            <mat-slider thumbLabel min=\"0\" max=\"10\" step=\"1\" formControlName=\"rating\"></mat-slider>\n        </div>\n        <div class=\"justify-content-around\">\n            <button mat-button\n                    mat-raised-button\n                    color=\"primary\"\n                    type=\"submit\"\n                    [disabled]=\"!movieForm.valid\"\n                    [textContent]=\"'Submit'\"></button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'hija-admin-console',\n  templateUrl: './admin-console.component.html',\n  styles: [\n  ]\n})\nexport class AdminConsoleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group mat-align-tabs=\"start\">\n    <mat-tab label=\"Add Movie\">\n        <hija-add-movie></hija-add-movie>\n    </mat-tab>\n</mat-tab-group>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes} from \"@angular/router\";\nimport { AdminConsoleComponent } from './admin-console/admin-console.component';\nimport {SharedModule} from \"../shared/shared.module\";\nimport { AddMovieComponent } from './add-movie/add-movie.component';\n\nconst routes: Routes = [\n  {path: 'admin',component: AdminConsoleComponent}\n]\n\n@NgModule({\n  declarations: [AdminConsoleComponent, AddMovieComponent],\n  imports: [\n      RouterModule.forChild(routes),\n      CommonModule,\n      SharedModule\n  ]\n})\nexport class AdminModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  { path:'', pathMatch:'full', redirectTo:'/public'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'hija-root',\n  template: `\n    <!--The content below is only a placeholder and can be replaced.-->\n    <hija-toolbar></hija-toolbar>\n     <div class=\"container\" style=\"margin: 5px 0px\">\n      <router-outlet></router-outlet>\n    </div>\n  `,\n  styles: []\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {PublicModule} from \"./public/public.module\";\nimport {SharedModule} from \"./shared/shared.module\";\nimport {AuthenticModule} from \"./authentic/authentic.module\";\nimport {AdminModule} from \"./admin/admin.module\";\nimport {DataStoreModule} from \"./data-store/data-store.module\";\nimport {MetaReducer, StoreModule} from \"@ngrx/store\";\nimport {EffectsModule} from \"@ngrx/effects\";\nimport {environment} from \"../environments/environment\";\nimport {StoreDevtoolsModule} from \"@ngrx/store-devtools\";\n\nexport const metaReducers: MetaReducer<any>[] = environment.production ? [] : [];\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    PublicModule,\n    SharedModule,\n    AuthenticModule,\n    AdminModule,\n    DataStoreModule,\n    StoreModule.forRoot({}, { metaReducers }),\n    EffectsModule.forRoot([]),\n    !environment.production ? StoreDevtoolsModule.instrument() : []\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport { LoginComponent } from './login/login.component';\nimport {SharedModule} from \"../shared/shared.module\";\n\nconst routes: Routes = [\n    { path: 'login', component: LoginComponent }\n]\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    SharedModule,\n    CommonModule,\n\n  ],\n  exports: [RouterModule]\n})\nexport class AuthenticModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {IUser} from \"../../model/user\";\nimport {NavigatorService} from \"../../core/services/navigator.service\";\n\n@Component({\n  selector: 'hija-login',\n  templateUrl: './login.component.html',\n  styleUrls: [\n      './login.component.css'\n  ]\n})\nexport class LoginComponent implements OnInit {\n  loginForm = this.formBuilder.group({\n    firstName:[''],\n    lastName:[''],\n    email: ['', Validators.required],\n    password: ['', Validators.required]\n  });\n  constructor(\n      private formBuilder: FormBuilder,\n      private router$: NavigatorService) { }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    const user = { ...this.loginForm.value } as IUser;\n    console.log(user);\n    if (this.loginForm.valid) {\n      // const user = { ...this.loginForm.value } as IUser;\n        this.add(user);\n    }\n  }\n  add(user: IUser) {\n    // this.customersService.add(customer);\n    this.router$.goToAdmin();\n  }\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-md-center\">\n        <div class=\"col-md-auto\">\n            <mat-card>\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n                    <div>\n                        <mat-form-field class=\"margin-right-10\">\n                            <mat-label>First name</mat-label>\n                            <input matInput placeholder=\"Adam\" formControlName=\"firstName\" required>\n                        </mat-form-field>\n                        <mat-form-field>\n                            <mat-label>Last name</mat-label>\n                            <input matInput placeholder=\"Smith\" formControlName=\"lastName\">\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"custom-width-form-field\">\n                            <mat-label>E-mail</mat-label>\n                            <input matInput placeholder=\"movies@example.com\" formControlName=\"email\" required>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"custom-width-form-field\">\n                            <mat-label>Password</mat-label>\n                            <input matInput\n                                   placeholder=\"password\"\n                                   formControlName=\"password\"\n                                   [type]=\"'password'\"\n                                   required>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"row justify-content-around\">\n                    <button mat-button\n                            mat-raised-button\n                            color=\"primary\"\n                            type=\"submit\"\n                            [disabled]=\"!loginForm.valid\"\n                            [textContent]=\"'Sign in/up'\"></button>\n                    </div>\n                    </form>\n            </mat-card>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {Subject} from \"rxjs\";\nimport {Router} from \"@angular/router\";\nimport {error} from \"@angular/compiler/src/util\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigatorService {\n\n  constructor(private router: Router) { }\n\n  goToAdmin(){\n    this.router.navigate(['/admin'])\n        .then(r => console.log('Moved to Admin console!'))\n        .catch(error => console.warn(error))\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError, mergeMap } from 'rxjs/operators';\nimport { DataServiceError } from '../services';\n\nexport abstract class DataAction<T> implements Action {\n    readonly type: string;\n    constructor(public readonly payload: T) {}\n}\n\nexport abstract class DataErrorAction<T> implements Action {\n    readonly type: string;\n    constructor(public readonly payload: DataServiceError<T>) {}\n}\n\n// Function of additional success actions\n// that returns a function that returns\n// an observable of ngrx action(s) from DataService method observable\nexport const toAction = (...actions: Action[]) => <T>(\n    source: Observable<T>,\n    successAction: new (data: T) => Action,\n    errorAction: new (err: DataServiceError<T>) => Action\n) =>\n    source.pipe(\n        mergeMap((data: T) => [new successAction(data), ...actions]),\n        catchError((err: DataServiceError<T>) => of(new errorAction(err)))\n    );\n","export * from './data.actions';\nexport * from './movie.actions';\n","import { Action } from '@ngrx/store';\n\nimport { IMovie } from '../../model/movie';\nimport { DataAction, DataErrorAction } from './data.actions';\nimport {DataServiceError} from \"../services\";\n\nexport const ADD_MOVIE = '[Movie] ADD_MOVIE';\nexport const ADD_MOVIE_ERROR = '[Movie] ADD_MOVIE_ERROR';\nexport const ADD_MOVIE_SUCCESS = '[Movie] ADD_MOVIE_SUCCESS';\n\nexport const GET_MOVIES = '[Movie] GET_MOVIES';\nexport const GET_MOVIES_SUCCESS = '[Movie] GET_MOVIES_SUCCESS';\nexport const GET_MOVIES_ERROR = '[Movie] GET_MOVIES_ERROR';\n\nexport const GET_MOVIE = '[Movie] GET_MOVIE';\nexport const GET_MOVIE_SUCCESS = '[Movie] GET_MOVIE_SUCCESS';\nexport const GET_MOVIE_ERROR = '[Movie] GET_MOVIE_ERROR';\n\nexport const SET_MOVIE_LOADING = '[Movie] SET_MOVIE_LOADING';\n\n// Initialize Movie Actions\n\nexport abstract class MovieAction implements DataAction<IMovie> {\n    readonly type: string;\n    constructor(public readonly payload: IMovie) {}\n}\n\nexport abstract class MovieErrorAction implements DataErrorAction<IMovie> {\n    readonly type: string;\n    constructor(public readonly payload: DataServiceError<IMovie>) {}\n}\n\nexport class GetMovies implements Action {\n    readonly type =  GET_MOVIES;\n}\n\nexport class GetMoviesSuccess implements Action {\n    readonly type = GET_MOVIES_SUCCESS;\n    constructor(public readonly payload: IMovie[]) {\n    }\n}\nexport class GetMoviesError implements Action {\n    readonly type = GET_MOVIES_ERROR;\n    constructor(public readonly payload: any) {\n    }\n}\n\nexport class AddMovie extends MovieAction {\n    readonly type = ADD_MOVIE;\n}\nexport class AddMovieSuccess extends MovieAction {\n    readonly type = ADD_MOVIE_SUCCESS\n}\nexport class AddMovieError extends MovieErrorAction {\n    readonly type = ADD_MOVIE_ERROR;\n}\n\nexport class SetMovieLoading {\n    readonly type = SET_MOVIE_LOADING;\n    constructor(public payload = true) {\n    }\n}\nexport type AllMovieActions =\n    | GetMovies\n    | GetMoviesError\n    | GetMoviesSuccess\n    | AddMovie\n    | AddMovieError\n    | AddMovieSuccess\n    | SetMovieLoading ;\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {StoreModule} from \"@ngrx/store\";\nimport {EffectsModule} from \"@ngrx/effects\";\nimport {reducers} from \"./reducers\";\nimport {IMovieEffects} from \"./effects/movie.effects\";\nimport {IMovieDataService, IMovieSelectors} from \"./services\";\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n      CommonModule,\n      HttpClientModule,\n      StoreModule.forFeature('entityCache', reducers),\n      EffectsModule.forFeature([ IMovieEffects ])\n  ],\n  providers: [\n    IMovieDataService,\n    IMovieSelectors\n  ],\n  exports: [\n      StoreModule, EffectsModule\n  ]\n})\nexport class DataStoreModule { }\n","\nimport * as IMovieActions from '../actions';\nimport {Injectable} from \"@angular/core\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable} from \"rxjs\";\nimport {IMovie} from \"../../model/movie\";\nimport {IMovieDataService} from \"../services/i-movie-data.service\";\nimport {concatMap, switchMap} from \"rxjs/operators\";\nimport {Action} from \"@ngrx/store\";\n\nconst toAction = IMovieActions.toAction()\ntype MovieAction = IMovieActions.MovieAction;\ntype GetMoviesAction = IMovieActions.GetMovies;\n\n@Injectable()\nexport class IMovieEffects {\n    constructor(\n        private actions$: Actions,\n        private movieDataService: IMovieDataService\n    ) {}\n\n    @Effect()\n    getMovies$: Observable<Action> = this.actions$\n        .pipe(\n            ofType(IMovieActions.GET_MOVIES),\n            switchMap(() =>\n            toAction(\n                this.movieDataService.getMovies(),\n                IMovieActions.GetMoviesSuccess,\n                IMovieActions.GetMoviesError\n            ))\n        )\n\n    @Effect()\n    addMovie$: Observable<Action> = this.actions$\n        .pipe(\n            ofType(IMovieActions.ADD_MOVIE),\n            concatMap((action: MovieAction) =>\n            toAction(\n                this.movieDataService.addMovie(action.payload),\n                IMovieActions.AddMovieSuccess,\n                IMovieActions.AddMovieError\n            ))\n        )\n}\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport * as actions from '../actions';\nimport * as movieReducers from './movie.reducer';\n\n\nexport type Action = actions.MovieAction;\n\nexport interface EntityState {\n    movies: movieReducers.IMovieState;\n}\n\nexport const reducers: ActionReducerMap<EntityState> = {\n    movies: movieReducers.reducer\n};\n","import {IMovie} from \"../../model/movie\";\nimport * as IMovieActions from '../actions';\n\nexport interface IMovieState {\n    movies: IMovie[];\n    movie: IMovie;\n    loading: boolean;\n    error: boolean;\n}\nexport const initialState: IMovieState = {\n    movies: [],\n    movie: null,\n    loading: false,\n    error: false\n};\n\nexport function reducer (\n    state =  initialState,\n    action: IMovieActions.AllMovieActions\n): IMovieState {\n    switch (action.type) {\n\n        case IMovieActions.ADD_MOVIE: {\n            return { ... state, loading: true};\n        }\n        case IMovieActions.ADD_MOVIE_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                movies: [...state.movies, { ...action.payload }]\n            }\n        }\n        case IMovieActions.ADD_MOVIE_ERROR: {\n            return {\n                ...state,\n                loading: false\n            }\n        }\n        case IMovieActions.GET_MOVIES: {\n            return {\n                ...state,\n                loading: true\n            }\n        }\n        case IMovieActions.GET_MOVIES_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                movies: action.payload\n            }\n        }\n        default:\n            break;\n    }\n}\n","export class DataServiceError<T> {\n    constructor(public error: any, public requestData: T) {}\n}\n","import {Injectable} from \"@angular/core\";\nimport {environment} from \"../../../environments/environment\";\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from \"@angular/common/http\";\nimport {Observable, throwError} from \"rxjs\";\nimport {IMovie} from \"../../model/movie\";\nimport {catchError} from \"rxjs/operators\";\nimport {DataServiceError} from \"./data-error.service\";\n\n\n@Injectable()\nexport class IMovieDataService {\n    apiUrlBase = environment.apiUrlBase;\n    constructor(private http: HttpClient) {\n    }\n\n    getMovies(): Observable<IMovie[]> {\n        return this.http.get<IMovie[]>(`${this.apiUrlBase}/movie`)\n            .pipe(\n                catchError(this.handleError())\n            )\n    }\n\n    addMovie(movie: IMovie): Observable<IMovie> {\n        return this.http.post<IMovie>(`${this.apiUrlBase}/movie`, movie)\n            .pipe(\n                catchError(this.handleError(movie))\n            )\n    }\n\n\n    private handleError<T>(requestData?: T) {\n        return (res: HttpErrorResponse) => {\n            const error = new DataServiceError(res.error, requestData);\n            console.error(error);\n            // return new ErrorObservable(error);\n            return throwError(error);\n        };\n    }\n}\n","export { DataServiceError } from './data-error.service';\n\nexport * from './i-movie-data.service'\n\nexport * from './movie.selectors'\n","\n\nimport {EntityState} from \"../reducers\";\nimport {createFeatureSelector, createSelector, select, Store} from \"@ngrx/store\";\nimport {IMovieState} from \"../reducers/movie.reducer\";\nimport {Injectable} from \"@angular/core\";\n\n\nconst getEntityState = createFeatureSelector<EntityState>('entityCache');\n\n\nconst getMovieState = createSelector(\n    getEntityState,\n    (state: EntityState) => state.movies\n);\n\nconst getAllMovies = createSelector(\n    getMovieState,\n    (state: IMovieState) => state.movies\n)\n\nconst getMovieLoading = createSelector(\n    getMovieState,\n    (state: IMovieState) => state.loading\n)\n\n@Injectable()\nexport class IMovieSelectors {\n    constructor(private store: Store<EntityState>) {}\n\n    movies$ = this.store.pipe(select(getAllMovies))\n    movieState$ = this.store.pipe(select(getMovieState))\n    loading$ = this.store.pipe(select(getMovieLoading))\n}\n","\nexport class IMovie {\n    _id: string;\n    name: string;\n    rating: number;\n    likes: number;\n    imdbUrl: string;\n    timestamp: string;\n    poster?: string;\n\n    static create(movie: Partial<IMovie> = {}) {\n        const newMovie = Object.assign(new IMovie(), {\n            _id: null,\n            name: null,\n            rating: 0,\n            likes: 0,\n            imdbUrl: null,\n            timestamp: null,\n            poster: null,\n            ...movie\n        });\n        return newMovie;\n    }\n};\n\n\n\n// export class IMovie {\n//     static missingMovie = 'assets/missing-movie.png';\n//\n//     id: string;\n//     name: string;\n//     rating: number;\n//     likes: number;\n//     imdbUrl: string;\n//     poster?: string;\n//\n//     static create(movie: Partial<IMovie> = {}) {\n//         const newMovie = Object.assign(new IMovie(), {\n//             name: 'not-detect',\n//             rating: 0,\n//             likes: 0,\n//             poster: IMovie.missingMovie,\n//             id: null\n//         });\n//         return newMovie;\n//     }\n\n//\n// let movie = IMovie.create(1, {})\n// console.log(movie)\n","import { Component, OnInit } from '@angular/core';\nimport {from, Observable, of} from \"rxjs\";\nimport {IMovie} from \"../../model/movie\";\nimport {Store} from \"@ngrx/store\";\nimport {EntityState} from \"../../data-store/reducers\";\nimport {IMovieSelectors} from \"../../data-store/services\";\nimport * as IMovieActions from \"../../data-store/actions\"\n\n@Component({\n  selector: 'hija-movies-list',\n  templateUrl: './movies-list.component.html',\n  styles: [\n  ]\n})\nexport class MoviesListComponent implements OnInit {\n  movies$: Observable<IMovie[]>;\n  loading$: Observable<boolean>;\n\n  constructor(\n      private store: Store<EntityState>,\n      private movieSelectors: IMovieSelectors\n  ) {\n    this.movies$ = this.movieSelectors.movies$;\n    this.loading$ = this.movieSelectors.loading$;\n  }\n\n  ngOnInit(): void {\n    this.store.dispatch(new IMovieActions.GetMovies());\n  }\n\n  openImdbTab(imdbUrl: string) {\n    window.open(imdbUrl);\n  }\n}\n","<mat-progress-bar *ngIf=\"loading$ | async\" mode=\"buffer\"></mat-progress-bar>\n\n<div  *ngFor=\"let movie of movies$ | async\">\n\n    <mat-card>\n        <!--    <div class=\"container\">-->\n        <div class=\"row\">\n            <div class=\"col text-center\">\n                <span [textContent]=\"movie.name\"></span>\n            </div>\n            <div class=\"col text-center\">\n                <span [textContent]=\"'Our Rating:' + movie.rating\"> </span>\n            </div>\n            <div class=\"col text-center\">\n                <span [outerText]=\"movie.likes + '\\npeople like\\n' + movie.name\"></span>\n                <br>\n                <mat-icon aria-hidden=\"false\" aria-label=\"Example thumb_up icon\">thumb_up</mat-icon>\n            </div>\n            <div class=\"col\">\n                <button mat-button mat-raised-button (click)=\"openImdbTab(movie.imdbUrl)\">Visit IMDB Page</button>\n            </div>\n        </div>\n        <!--    </div>-->\n    </mat-card>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport { MoviesListComponent } from './movies-list/movies-list.component';\nimport {MaterialModule} from \"../shared/material.module\";\n\nconst routes: Routes = [\n  { path: 'public',  component: MoviesListComponent }\n];\n\n@NgModule({\n  declarations: [MoviesListComponent],\n  imports: [\n    RouterModule.forRoot(routes),\n    MaterialModule.components,\n    CommonModule\n  ],\n  exports: [RouterModule]\n})\nexport class PublicModule { }\n","import {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatIconModule} from '@angular/material/icon';\n\nexport class MaterialModule {\n    static components = [\n        ReactiveFormsModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatButtonModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatTabsModule,\n        MatSliderModule,\n        MatProgressBarModule,\n        MatIconModule\n    ]\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport {MaterialModule} from \"./material.module\";\nimport {RouterModule} from \"@angular/router\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\n\n\n\n\n@NgModule({\n  declarations: [ToolbarComponent],\n  exports: [\n      BrowserAnimationsModule,\n      ToolbarComponent,\n      MaterialModule.components,\n  ],\n    imports: [\n        BrowserAnimationsModule,\n        CommonModule,\n        MaterialModule.components,\n        RouterModule,\n    ],\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {NavigatorService} from \"../../core/services/navigator.service\";\n\n@Component({\n  selector: 'hija-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: [\n      './toolbar.component.css'\n  ]\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor(private navigator: NavigatorService) { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<mat-toolbar>\n    <mat-toolbar-row class=\"justify-content-between\">\n        <div>\n            <button mat-raised-button [routerLink]=\"['public']\">Public</button>\n        </div>\n        <div>\n        <button mat-raised-button color=\"primary\" [routerLink]=\"['login']\">Login</button>\n        </div>\n    </mat-toolbar-row>\n</mat-toolbar>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrlBase: 'http://0.0.0.0:5000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}